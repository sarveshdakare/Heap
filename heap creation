#include <bits/stdc++.h>

using namespace std;

class Heap {
public:
    int arr[100];
    int size = 0;

    void insert(int val) {
        size++;
        int index = size;
        arr[index] = val;

        while (index > 1) {
            int parent = index / 2;
            if (arr[parent] < arr[index]) {
                swap(arr[parent], arr[index]);
                index = parent;
            } else {
                return;
            }
        }
    }

    void print() {
        for (int i = 1; i <= size; i++) {
            cout << arr[i] << endl;
        }
    }
    void deleteFromHeap()
    {
        if (size == 0)
        { 
            cout << "nothing to delete" << endl;
            return;
        }

        // put last node element at root node
        arr[1] = arr[size];

        // remove lase node
        size--;

        // put root node at corect position
        int i = 1;

        while (i < size)
        {
            int leftIndex = 2 * i;
            int rightIndex = 2 * i + 1;

            if (leftIndex < size && arr[i] < arr[leftIndex] && arr[leftIndex] > arr[rightIndex])
            {
                swap(arr[i], arr[leftIndex]);
                i = leftIndex;
            }

            else if (rightIndex < size && arr[i] < arr[rightIndex] && arr[leftIndex] < arr[rightIndex])
            {
                swap(arr[i], arr[rightIndex]);
                i = rightIndex;
            }

            else
            {
                return;
            }
        }
    }
    
};
void heapify(int arr[],int n,int i){
        int largest=i;
        int left=i*2;
        int right=i*2+1;
        
        if(left<=n && arr[largest]<arr[left]){
            largest=left;
        }
        
        if(right<=n && arr[largest]<arr[right]){
            largest=right;
        }
        
        if(largest!=i){
            swap(arr[largest],arr[i]);
            heapify(arr,n,largest);
        }
        
    }
    void heapsort(int arr[],int n){
        int size=n;
        
        while(size>1){
            swap(arr[size],arr[1]);
            size--;
            
            heapify(arr,size,1);
        }
    }
int main() {
    Heap p;
    p.insert(50);
    p.insert(55);
    p.insert(53);
    p.insert(52);
    p.insert(54);
    p.print();
p.deleteFromHeap();
cout<<"after delete"<<endl;
p.print();

int arr[6]={-1,54,53,55,52,50};
int n=5;

for(int i=n/2;i>0;i--){
    heapify(arr,n,i);
}
cout<<"after heapify "<<endl;
for (int i = 1; i <=n; i++) {
    /* code */
    cout<<arr[i]<<endl;

    
}

heapsort(arr,n);
cout<<"after heapify sort"<<endl;

for (int i = 1; i <=n; i++) {
    /* code */
    cout<<arr[i]<<endl;
}
    return 0;
}
